#BlueJ class context
comment0.target=AbstractTurtle
comment0.text=\n\ A\ utility\ implementation\ of\ the\ Turtle\ interface\ to\ provide\ a\ reasonable\n\ implementation\ for\ all\ other\ methods\ than\ {@code\ move}\ so\ that\ the\ \n\ implementors\ of\ subclasses\ don't\ need\ to\ define\ these\ methods\ unless\n\ they\ want\ to.\n\ @author\ Ilkka\ Kokkarinen\n
comment1.params=g2
comment1.target=void\ setGraphics2D(java.awt.Graphics2D)
comment1.text=\n\ Set\ the\ {@code\ Graphics2D}\ object\ that\ this\ turtle\ draws\ on.\n\ @param\ g\ The\ {@code\ Graphics2D}\ object\ that\ this\ turtle\ draws\ on.\n
comment10.params=
comment10.target=double\ getY()
comment10.text=\n\ Get\ the\ y-coordinate\ of\ the\ absolute\ position\ of\ the\ turtle.\n\ @return\ The\ y-coordinate\ of\ the\ absolute\ position\ of\ the\ turtle.\n
comment11.params=
comment11.target=double\ getHeading()
comment11.text=\n\ Get\ the\ absolute\ heading\ of\ the\ turtle.\n\ @return\ The\ absolute\ heading\ of\ the\ turtle.\n
comment12.params=down
comment12.target=void\ setPen(boolean)
comment12.text=\n\ Set\ the\ state\ of\ the\ pen.\ When\ the\ pen\ is\ down,\ the\ turtle\ leaves\n\ some\ kind\ of\ drawing\ behind\ its\ movement,\ and\ when\ the\ pen\ is\ up,\n\ the\ turtle\ moves\ without\ drawing\ anything.\n\ @param\ down\ Whether\ the\ pen\ is\ currently\ down.\n
comment13.params=
comment13.target=boolean\ getPen()
comment13.text=\n\ Get\ the\ current\ state\ of\ the\ pen.\ When\ the\ pen\ is\ down,\ the\ turtle\n\ leaves\ some\ kind\ of\ drawing\ behind\ its\ movement,\ and\ when\ the\ pen,\n\ is\ up\ the\ turtle\ moves\ without\ drawing\ anything.\n\ @return\ Whether\ the\ pen\ is\ currently\ down.\n
comment14.params=turnAngle
comment14.target=void\ turn(double)
comment14.text=\n\ Turn\ the\ turtle\ in\ place\ the\ given\ angle,\ measured\ in\ degrees.\ Positive\n\ angle\ turns\ the\ turtle\ left,\ while\ a\ negative\ angle\ turns\ it\ right.\n\ @param\ turnAngle\ The\ angle\ to\ turn.\n
comment15.params=
comment15.target=Turtle\ clone()
comment15.text=\n\ Create\ an\ identical\ clone\ of\ this\ turtle,\ if\ the\ operation\ is\ supported.\n
comment2.params=
comment2.target=java.awt.Graphics2D\ getGraphics2D()
comment2.text=\n\ Get\ the\ {@code\ Graphics2D}\ object\ that\ this\ turtle\ draws\ on.\n\ @return\ The\ {@code\ Graphics2D}\ object\ that\ this\ turtle\ draws\ on.\n
comment3.params=x\ y
comment3.target=void\ setPosition(double,\ double)
comment3.text=\n\ Set\ the\ absolute\ position\ of\ the\ turtle.\ The\ spirit\ of\ turtle\ graphics\n\ is\ to\ call\ this\ method\ only\ once\ in\ the\ beginning,\ after\ which\ you\ only\n\ use\ the\ relative\ motion\ operations.\n\ @param\ x\ The\ x-coordinate\ of\ the\ absolute\ position.\n\ @param\ y\ The\ y-coordinate\ of\ the\ absolute\ position.\n
comment4.params=angle
comment4.target=void\ setHeading(double)
comment4.text=\n\ Set\ the\ absolute\ heading\ of\ the\ turtle.\ The\ spirit\ of\ turtle\ graphics\n\ is\ to\ call\ this\ method\ only\ once\ in\ the\ beginning,\ after\ which\ you\ only\n\ use\ the\ relative\ motion\ operations.\n\ @param\ angle\ The\ absolute\ heading\ angle\ of\ the\ turtle,\ expressed\ in\ degrees\n\ with\ 0\ pointing\ right\ and\ 90\ pointing\ up.\n
comment5.params=color
comment5.target=void\ setColor(java.awt.Color)
comment5.text=\n\ Set\ the\ current\ drawing\ color\ to\ use\ in\ drawing\ when\ the\ pen\ is\ down.\n\ @param\ color\ The\ current\ drawing\ color\ to\ use.\n
comment6.params=
comment6.target=java.awt.Color\ getColor()
comment6.text=\n\ Get\ the\ current\ drawing\ color\ to\ use\ in\ drawing\ when\ the\ pen\ is\ down.\n\ @return\ The\ current\ drawing\ color\ to\ use.\n
comment7.params=stroke
comment7.target=void\ setStroke(java.awt.Stroke)
comment7.text=\n\ Set\ the\ current\ stroke\ to\ be\ used\ in\ drawing\ when\ the\ pen\ is\ down.\n\ @param\ stroke\ The\ current\ stroke\ to\ use\ in\ drawing.\n
comment8.params=
comment8.target=java.awt.Stroke\ getStroke()
comment8.text=\n\ Get\ the\ current\ stroke\ to\ be\ used\ in\ drawing\ when\ the\ pen\ is\ down.\n\ @return\ The\ current\ stroke\ to\ use\ in\ drawing.\n
comment9.params=
comment9.target=double\ getX()
comment9.text=\n\ Get\ the\ x-coordinate\ of\ the\ absolute\ position\ of\ the\ turtle.\n\ @return\ The\ x-coordinate\ of\ the\ absolute\ position\ of\ the\ turtle.\n
numComments=16
